[
["index.html", "MARSS wiki 1 ReadMe 1.1 Contribute 1.2 Downloading the Rmds", " MARSS wiki 1 ReadMe 1.1 Contribute Write an Rmd file. Go to rmdfiles folder Click on Upload files Select ‘Create new branch and start a pull request’ Each Rmd file contains one and only one entry/vignette. The title of your vignette must be at the top of your Rmd and have # (chapter level). Subsequent headings should be ##. Don’t add yaml to the top of your Rmd. Look at an existing Rmd in the folder for an example. You can write math in normal LaTeX. You can also post at the wiki associated with the MARSS repo, but then it’ll just be raw R or Rmd code. MARSS simple wiki 1.2 Downloading the Rmds Move mouse up to header of the example you want to download. Click on the “pencil” icon to take you to GitHub. In the top right, RIGHT click on Raw button. Save as … "],
["plot-states-from-a-marss-fit.html", "2 Plot states from a MARSS fit", " 2 Plot states from a MARSS fit date: March 16, 2018 Required packages library(MARSS) library(broom) library(ggplot2) library(dplyr) if(packageVersion(&quot;MARSS&quot;)&lt;&quot;3.10.4&quot;) stop(&quot;Need MARSS version 3.10.4 at least.&quot;, call.=FALSE) Fit a model data(harborSealWA) kemfit &lt;- MARSS(t(harborSealWA[,-1]), model=list(Z=as.factor(c(1,1,1,1,2)), R=&quot;diagonal and equal&quot;)) Create a function for fitting. plot_fitted = function(fitted_model, type=c(&quot;states&quot;, &quot;fits&quot;)) { if(type==&quot;states&quot;) { states = tidy(kemfit, &quot;states&quot;) states = dplyr::rename(states, state=term) states$state = paste0(&quot;State &quot;,states$state) g = ggplot(states, aes(t, estimate)) + geom_ribbon(aes(ymin = conf.low, ymax=conf.high), alpha=0.3, col=&quot;grey&quot;) + geom_line() + xlab(&quot;Time&quot;) + ylab(&quot;Estimate&quot;) + facet_wrap(~state, scale=&quot;free_y&quot;) return(g) } } plot = plot_fitted(kemfit, type=&quot;states&quot;) print(plot) We can still manipulate / add to the plot of the states as we would with any other ggplot() graphics. for example, add a title: plot = plot + ggtitle(&quot;2 - trend MARSS model&quot;) print(plot) "],
["plot-states-from-a-dfa-using-ggplot.html", "3 Plot states from a DFA using ggplot", " 3 Plot states from a DFA using ggplot date: March 15, 2018 Requires MARSS 3.10.5+ Required packages library(MARSS) library(broom) library(ggplot2) if(packageVersion(&quot;MARSS&quot;)&lt;&quot;3.10.4&quot;) stop(&quot;Need MARSS version 3.10.4 at least.&quot;) Load data and zscore data(lakeWAplankton) # we want lakeWAplanktonTrans, which has been log-transformed # and the 0s replaced with NAs plankdat = lakeWAplanktonTrans years = plankdat[,&quot;Year&quot;]&gt;=1980 &amp; plankdat[,&quot;Year&quot;]&lt;1990 phytos = c(&quot;Cryptomonas&quot;, &quot;Diatoms&quot;, &quot;Greens&quot;, &quot;Unicells&quot;, &quot;Other.algae&quot;) dat.spp.1980 = plankdat[years,phytos] # transpose data so time goes across columns dat.spp.1980 = t(dat.spp.1980) dat.z = zscore(dat.spp.1980) Fit a DFA with 3 trends. Setting maxit to 50, so it runs fast. model.list = list(m=3, R=&quot;diagonal and unequal&quot;) kemz.3 = MARSS(dat.spp.1980, model=model.list, z.score=TRUE, form=&quot;dfa&quot;, control=list(maxit=50)) Make a plot of trends with CIs theme_set(theme_bw()) d &lt;- tidy(kemz.3, type=&quot;states&quot;) ggplot(data = d) + geom_line(aes(t, estimate)) + geom_ribbon(aes(x=t, ymin=conf.low, ymax=conf.high), linetype=2, alpha=0.1) + facet_grid(~term) + xlab(&quot;Time Step&quot;) + ylab(&quot;Val&quot;) "]
]
